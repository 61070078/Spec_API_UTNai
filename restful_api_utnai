swagger: '2.0'
info:
  description: This is a simple API
  version: 1.0.0
  title: UTNai API
tags:
- name: Employer
- name: Employee
- name: User
  description: Unregistered user

paths:
  /register:
    post:
      tags:
      - User
      summary: create user
      description: This function for create user
      operationId: createUser
      parameters:
      - in: "body"
        name: "infomation"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/user'
        400:
          description: Plase Enter Information
          schema:
                type: object
                properties:
                  statuscode:
                    type: string
                    example: "4000001"
                  statustext:
                    type: string
                    example: "Field not complete"

  /login:
    post:
      tags: 
      - User
      summary: login user 
      description: This function for login
      operationId: login user
      parameters: 
      - in: "body"
        name: "data"
        description: "load data from server"
        required: true
        schema:
          $ref: "#/definitions/login"
      responses: 
        200:
          description: Login is successful
          schema:
            $ref: "#/definitions/login"
        400:
          description: Login is unsuccessful
          schema:
                type: object
                properties:
                  statuscode:
                    type: string
                    example: "4000002"
                  statustext:
                    type: string
                    example: "Login is unsuccessful"
                  email:
                    type: string
                    example: "Plase Enter Email"
                  passworld:
                    type: string
                    example: "Plase Enter Passworld"
                  
        406:
          description: Login is unsuccessful
          schema:
                type: object
                properties:
                  statuscode:
                    type: string
                    example: "4060001"
                  statustext:
                    type: string
                    example: "Login is unsuccessful"
                  passworld:
                    type: string
                    example: "Passworld is incorrect"

  /interest:
    post:
      tags:
      - Employee
      summary: Interest selection
      description: ""
      operationId: interestSelection
      parameters:
      - in: "body"
        name: "interest data"
        description: ""
        required: true
        schema:
          $ref: '#/definitions/interest'
      responses:
        200:
          description: Interest selected
          schema:
            $ref: '#/definitions/interest'
        400:
          description: Field not complete
          schema:
                type: object
                properties:
                  statusCode:
                    type: string
                    example: "40000003"
                  statusText:
                    type: string
                    example: Field not complete
                  interest:
                    type: string
                    example: "Please select your interest"

  /employee/profile/{id}:
    get:
      tags:
      - Employee
      summary: Show employee profile
      description: ""
      operationId: showProfile
      parameters:
        - in: "path"
          name: "id"
          required: true
          type: integer
          format: int32
      responses:
          200:
            description: OK
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: tae_chanhom@hotmail.com
                passworld:
                  type: string
                  example: 029959866Tae
                gender:
                  type: string
                  example: male
                brithday:
                  type: string
                  example: 14/12/42
                firstname:
                  type: string
                  example: John
                lastname:
                  type: string
                  example: Smith
                interest:
                  type: string
                  example: Coffee Shop
                age:
                  type: integer
                  example: 20
                language:
                  type: string
                  example: Thai
                experience:
                  type: string
                  example: none
          400:
            description: This id does not exist
  
  /employee/profile/{id}/edit:
    put:
      tags:
      - Employee
      summary: "For employee to edit their profile"
      description: ""
      operationId: editProfile
      parameters:
        - in: "path"
          name: "id"
          description: "To identify which id to edit"
          required: true
          type: integer
          format: int32
        - in: "body"
          name: "body"
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/profile_employee"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/profile_employee' 

  /post:
    get:
      tags: 
      - Employer
      summary: Show infomation's employer
      description: ""
      responses:
        200:
          description: Successful
          schema:
                type: object
                properties:
                  statuscode:
                    type: string
                    example: "2000002"
                  statustext:
                    type: string
                    example: "Successful"
                  get:
                    $ref: '#/definitions/category'

    post:
      tags: 
      - Employer
      summary: Employer can create  new post in this path.
      description: ""
      parameters: 
      - in: "body"
        name: "category edit"
        description: ""
        required: true
        schema:
          $ref: '#/definitions/category'
      responses:
        201:
          description: Created!
          schema:
                type: object
                properties:
                  statuscode:
                    type: string
                    example: "2010002"
                  statustext:
                    type: string
                    example: "Create is successful"
                  post:
                    $ref: '#/definitions/category'

    put:
      tags: 
      - Employer
      summary: Employer can edit or update infomation in this path.
      description: ""
      operationId: ""
      parameters: 
      - in: "body"
        name: "category edit"
        description: ""
        required: true
        schema:
          $ref: '#/definitions/category'
      responses:
        202:
          description: Accepted!
          schema:
            properties:
              statuscode:
                type: string
                example: "2020001"
              statustext:
                type: string
                example: "Update is successful"
              put:
                $ref: '#/definitions/category'
        400:
          description: Create is unsuccessful
          schema:
                type: object
                properties:
                  statuscode:
                    type: string
                    example: "4000003"
                  statustext:
                    type: string
                    example: "Create is unsuccessful"

  /role:
    post:
      tags:
      - User
      summary: User can select their role in this page
      description: " "
      operationId: roleSelection
      parameters:
      - in: "body"
        name: "Role selection"
        description: "Role Selection"
        required: true
        schema:
          $ref: '#/definitions/role'
      responses:
        200:
          description: "Role Selected"
          schema:
            $ref: "#/definitions/role"
  
  /location/employer:
    get:
      tags: 
      - Employer
      summary: "this is a page to show employee list"
      description: ""
      responses:
        200:
          description: OK
          schema:
            properties:
              statuscode:
                type: string
                example: "2000001"
              statustext:
                type: string
                example: "Successful"
              users:
                type: array
                items:
                  $ref: '#/definitions/employee_list'

  /location/employer/{userID}:
    get:
      tags:
      - Employer
      summary: "this page show profile's employee"
      description: ""
      parameters:
      - in: "path"
        name: "userID"
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: Successful
          schema:
            properties:
                statuscode:
                  type: string
                  example: "2000001"
                statustext:
                  type: string
                  example: "Successful"
                get:
                  $ref: '#/definitions/profile_employee'

  /location/post:
    get:
      tags: 
      - Employer
      summary: "This page show post list"
      description: ""
      parameters:
        - in: path
          name: query
          type: string
          required: true
          description: Search data.
      responses:
        200:
          description: Successful
          schema:
            properties:
              statusCode:
                type: string
                example: "40800003"
              statusText:
                type: string
                example: Request Timeout
              posts:
                type: array
                items:
                  $ref: '#/definitions/post_list'
              search:
                type: object
                properties:
                  key:
                    type: string
                    example: name
                  query:
                    type: string
                    example: U-coffee
  
  /forgot:
    post:
      tags:
      - User
      summary: "Reset Password"
      description: ""
      parameters:
      - in: "body"
        name: "reset"
        description: ""
        required: true
        schema:
          $ref: '#/definitions/reset'
      responses:
        200:
          description: Reseting E-mail sent
  
  /change/{id}:
    put:
      tags:
      - Employee
      - Employer
      summary: Change Password
      description: ""
      operationId: changePass
      parameters:
        - in: "path"
          name: "id"
          required: true
          type: integer
          format: int32
        - in: "body"
          name: "body"
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/change"
      responses:
        200:
          description: Changed

  /delete/{id}:
    delete:
      tags:
      - Employee
      - Employer
      summary: Delete Accout
      description: ""
      operationId: Delete
      parameters:
        - in: "path"
          name: "id"
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Deleted

  /filter/employee:
    get:
      tags:
      - Employee
      summary: Shop filter
      description: ""
      operationId: ""
      parameters:
        - in: "body"
          name: "filter"
          required: true
          schema:
            $ref: '#/definitions/filter_employee'
      responses:
        200:
          description: OK
          schema:
            properties:
              shop1:
                type: string
                example: starbuck
              shop2:
                type: string
                example: amazon
  
  /shop/{id}:
    get:
      tags:
      - Employee
      summary: show shop information
      description: ""
      operationId: getInformation
      parameters:
        - in: "path"
          name: "id"
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/category'

  /filter/employer:
    get:
      tags:
      - Employer
      summary: Employer Filter
      description: ""
      operationId: ""
      parameters:
        - in: "body"
          name: "filter"
          required: true
          schema:
            $ref: '#/definitions/filter_employer'
      responses:
        200:
          description: Successful
          schema:
            properties:
                statuscode:
                  type: string
                  example: "2000001"
                statustext:
                  type: string
                  example: "Successful"
                get:
                  $ref: '#/definitions/filter_employer'

  /chat:
    get:
      tags: 
      - Employer
      summary: "This page show chat list"
      description: ""
      responses:
        200:
          description: OK
          schema:
            properties:
                statuscode:
                  type: string
                  example: "2000001"
                statustext:
                  type: string
                  example: "Successful"
                chats:
                  type: array
                  items:
                    $ref: '#/definitions/profile_employee'

  /employer/interest:
    get:
      tags: 
      - Employer
      summary: "This page show employee list"
      description: ""
      responses:
        200:
          description: Successful
          schema:
            properties:
                statuscode:
                  type: string
                  example: "2000001"
                statustext:
                  type: string
                  example: "Successful"
                interests:
                  type: array
                  items:
                    $ref: '#/definitions/profile_employee'

  /interest/employee/{userID}:
    get:
      tags:
      - Employer
      summary: "Employee Information"
      description: ""
      parameters:
      - in: "path"
        name: "userID"
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            properties:
                statuscode:
                  type: string
                  example: "2000001"
                statustext:
                  type: string
                  example: "Successful"
                get:
                  $ref: '#/definitions/profile_employee'

  /employer/profile:
    get:
      tags:
      - Employer
      summary: "Employer Information"
      description: ""
      responses:
        200:
          description: OK
          schema:
            properties:
              statuscode:
                  type: string
                  example: "2000001"
              statustext:
                type: string
                example: "Successful"
              get:
                $ref: '#/definitions/profile_employer'

  
  /employer/profile/edit:
    put:
      tags:
      - Employer
      summary: "For employer to edit their profile"
      description: ""
      parameters:
      - in: "body"
        name: "employer profile edit"
        required: true
        schema:
          $ref: '#/definitions/profile_employer'
      responses:
        200:
          description: OK
          schema:
            properties:
              statuscode:
                type: string
                example: "2000001"
              statustext:
                type: string
                example: "Successful"
              put:
                $ref: '#/definitions/profile_employer'
        400:
          description: Login is unsuccessful
          schema:
                type: object
                properties:
                  statuscode:
                    type: string
                    example: "4000003"
                  statustext:
                    type: string
                    example: "Create is unsuccessful"
                  companyname:
                    type: string
                    example: "Plase Enter Company Name"
                  phonenumber:
                    type: string
                    example: "Plase Enter Phone Number"
                  email:
                    type: string
                    example: "Plase Enter Email"
                  website:
                    type: string
                    example: "Plase Enter Website"
                  address:
                    type: string
                    example: "Plase Enter Address"

  /package/{levelID}:
    get:
      tags: 
      - Employer
      summary: "Show package list"
      description: ""
      parameters: 
      - in: "path"
        name: "levelID"
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            properties:
              statuscode:
                type: string
                example: "2000001"
              statustext:
                type: string
                example: "Successful"
              get:
                $ref: '#/definitions/package'

definitions:
  filter_employee:
    type: object
    required:
    - dist
    - province
    - category
    properties:
      dist:
        type: integer
        example: 50
      province:
        type: string
        example: bangkok
      category:
        type: string
        example: Bar 
  
  filter_employer:
    type: object
    required:
    - category
    - province
    properties:
      category:
        type: string
        example: CEO
      province:
        type: string
        example: bangkok
  
  change:
    type: object
    required:
    - oldpass
    - newpass
    - confirm
    properties:
      oldpass:
        type: string
        example: swaggerisveryeasy
      newpass:
        type: string
        example: ricksanchez12345
      confirm:
        type: string
        example: ricksanchez12345
        
  reset:
    type: object
    required:
    - email
    properties:
      email:
        type: string
        example: rick@gmail.com
  user: 
    type: object
    required:
    - email
    - passworld
    - gender
    - birthday
    - firstname
    - lastname
    - id
    properties:
      email:
        type: string
        example: tae_chanhom@hotmail.com
      passworld:
        type: string
        example: 029959866Tae
      gender:
        type: string
        example: male
      brithday:
        type: string
        example: 14/12/42
      firstname:
        type: string
        example: John
      lastname:
        type: string
        example: Smith
      id:
        type: string
        example: 152
  login:
    type: object
    required: 
    - email
    - password
    properties:
      email:
        type: string
        example: john777@gmail.com
      password:
        type: string
        example: supersecret777

  category:
    type: object
    required: 
    - category
    - shopname
    - description
    - wage
    - min
    - max
    - location
    - province
    properties:
      category:
        type: string
        example: Coffee shop
      shopname:
        type: string
        example: U-coffee
      description:
        type: string
        example: information about you shop
      wage:
        type: string
        example: Week
      min:
        type: integer
        example: 1000
      max:
        type: integer
        example: 8000
      location:
        type: string
        example: lamlugar 12130
      province:
        type: string
        example: bangkok
  role:
    type: object
    required:
    - role
    properties:
      role:
        type: string
        example: Employee
        
  interest:
    type: object
    required:
    - interest
    properties:
      interest:
        type: string
        example: Coffee shop

  employee_list:
    type: object
    required: 
    - id
    - name
    - occupation
    - age
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: tae
      occupation:
        type: string
        example: Selesperson
      age:
        type: integer
        example: 24
        
  post_list:
    type: object
    required: 
    - postID
    - shopname
    - category
    - province
    properties:
      postID:
        type: integer
        example: 1
      shopname:
        type: string
        example: U-Coffee
      category:
        type: string
        example: Coffee Shop
      province:
        type: string
        example: Bangkok
    
  profile_employee:
    type: object
    required:
    - firstname
    - lastname
    - birthday
    - age
    - email
    - number
    - interest
    - language
    - experience
    - id
    properties:
      firstname:
        type: string
        example: Rick
      lastname:
        type: string
        example: Sanchez
      birthday:
        type: string
        example: 29/2/1999
      age:
        type: integer
        example: 19
      email:
        type: string
        example: rick@gmail.com
      number:
        type: string
        example: 089-999
      interest:
        type: string
        example: spaceship crew
      language:
        type: string
        example: English
      experience:
        type: string
        example: none
      id:
        type: integer
        
  profile_employer:
    type: object
    required:
    - companyname
    - phonenumber
    - email
    - website
    - address
    - id
    properties:
      companyname:
        type: string
        example: UTNai Company
      phonenumber:
        type: string
        example: 032-051-4216
      email:
        type: string
        example: UTNai@gmail.com
      website:
        type: integer
        example: UTNai.com
      address:
        type: string
        example: 11600  New Petchaburi Rd.
                Makkasan Sub-area   Ratchathewi Area
                Krung Thep Maha Nakhon   10400
                Thailand.
      id:
        type: integer
        
  package:
    type: object
    required:
    - levelID
    - level
    - price
    - timerange
    - postrange
    - positions
    properties:
      levelID:
        type: integer
        format: int64
        example: 1
      level:
        type: integer
        example: 1
      price:
        type: integer
        example: 500
      timerange:
        type: integer
        example: 1
      postrange:
        type: string
        example: unlimited
      positions:
        type: integer
        example: 1
  
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /61070078/test/1.0.0
schemes:
 - https
# Added by API Auto Mocking Plugin
# basePath: /61070078/UTnai_v01/1.0.0
# Added by API Auto Mocking Plugin
# basePath: /61070078/UTNai_V01_API/1.0.0
# Added by API Auto Mocking Plugin
# basePath: /61070089/UTNai_API/1.0.0
# Added by API Auto Mocking Plugin
basePath: /61070078/UTNai_V01_API/1.0.0