swagger: '2.0'
info:
  description: This is a simple API
  version: 1.0.0
  title: UTNai API
tags:
- name: Employer #[Tae]
  #filter, chat, interest, neardy, package
- name: Employee #[Jab]
  #filter, chat, interest, map
- name: Auth #[Jab]
  #login, logout, forgotpass, register
- name: Post #[Tae]
  #list[get], post, put, show[get], del
- name: Profile #[Tae]
  #company [employer], profile[employee], chanpass

paths:
#Authentication ----------------------------------------------------------------
  /auth/register:
    post:
      tags:
      - Auth
      summary: create user
      description: This function for create user
      operationId: createUser
      parameters:
      - in: "body"
        name: "infomation"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        201:
          description: Created
          schema:
            properties:
              statuscode:
                type: string
                example: "2010001"
              statustext:
                type: string
                example: "Created"
              register:
                $ref: '#/definitions/user'
        400:
          description: Plase Enter Information
          schema:
                type: object
                properties:
                  statuscode:
                    type: string
                    example: "4000001"
                  statustext:
                    type: string
                    example: "Field not complete"
  
  /auth/login/email:
    post:
      tags: 
      - Auth
      summary: login user 
      description: This function for login
      operationId: login user
      parameters: 
      - in: "body"
        name: "data"
        description: "load data from server"
        required: true
        schema:
          properties:
            email:
              type: string
              example: sanchez@mail.com
            password:
              type: string
              example: rickiest_rick
      responses: 
        200:
          description: Login is successful
          schema:
            properties:
              statusCode:
                type: integer
                example: 2000001
              statusText:
                type: string
                example: Login successful
              token:
                properties:
                  token:
                    type: object
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.
        400:
          description: Login is unsuccessful
          schema:
            properties:
              statuscode:
                type: string
                example: "4000002"
              statustext:
                type: string
                example: "Login is unsuccessful"

  /auth/login/facebook:
    post:
      tags: 
      - Auth
      summary: login user 
      description: This function for login
      operationId: login users
      parameters: 
      - in: "body"
        name: "data"
        description: "load data from server"
        required: true
        schema:
          properties:
            email:
              type: string
              example: sanchez@mail.com
            password:
              type: string
              example: rickiest_rick
      responses: 
        200:
          description: Login is successful
          schema:
            properties:
              statusCode:
                type: integer
                example: 2000001
              statusText:
                type: string
                example: Login successful
              token:
                properties:
                  token:
                    type: object
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.
        400:
          description: Login is unsuccessful
          schema:
            properties:
              statuscode:
                type: string
                example: "4000002"
              statustext:
                type: string
                example: "Login is unsuccessful"

  /auth/login/google:
    post:
      tags: 
      - Auth
      summary: login user 
      description: This function for login
      operationId: loginUser
      parameters: 
      - in: "body"
        name: "data"
        description: "load data from server"
        required: true
        schema:
          properties:
            email:
              type: string
              example: sanchez@mail.com
            password:
              type: string
              example: rickiest_rick
      responses: 
        200:
          description: Login is successful
          schema:
            properties:
              statusCode:
                type: integer
                example: 2000001
              statusText:
                type: string
                example: Login successful
              token:
                properties:
                  token:
                    type: object
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.
        400:
          description: Login is unsuccessful
          schema:
            properties:
              statuscode:
                type: string
                example: "4000002"
              statustext:
                type: string
                example: "Login is unsuccessful"
 
  /auth/otp/send:
    post:
      tags:
      - Auth
      summary: "Reset Password"
      description: ""
      parameters:
      - in: "body"
        name: "reset"
        description: ""
        required: true
        schema:
          properties:
            email:
              type: string
              example: sanchez@mail.co
      responses:
        200:
          description: Reseting E-mail sent
          schema:
            properties:
              statusCode:
                type: integer
                example: 2000010
              statusText:
                type: string
                example: E-mail sent!
    put:
      tags:
      - Auth
      summary: "Reset Password"
      description: ""
      parameters:
      - in: "body"
        name: "reset"
        description: ""
        required: true
        schema:
          properties:
            email:
              type: string
              example: sanchez@mail.co
      responses:
        200:
          description: Reseting E-mail sent
          schema:
            properties:
              statusCode:
                type: integer
                example: 2000010
              statusText:
                type: string
                example: E-mail sent!

  /auth/otp/check:
    post:
      tags:
      - Auth
      summary: "Reset Password"
      description: ""
      parameters:
      - in: "body"
        name: "reset"
        description: ""
        required: true
        schema:
          properties:
            email:
              type: string
              example: sanchez@mail.co
      responses:
        200:
          description: Reseting E-mail sent
          schema:
            properties:
              statusCode:
                type: integer
                example: 2000010
              statusText:
                type: string
                example: E-mail sent!
    put:
      tags:
      - Auth
      summary: "Reset Password"
      description: ""
      parameters:
      - in: "body"
        name: "reset"
        description: ""
        required: true
        schema:
          properties:
            email:
              type: string
              example: sanchez@mail.co
      responses:
        200:
          description: Reseting E-mail sent
          schema:
            properties:
              statusCode:
                type: integer
                example: 2000010
              statusText:
                type: string
                example: E-mail sent!

  /auth/changpass:
    put:
      tags:
      - Auth
      summary: "Reset Password"
      description: ""
      parameters:
      - in: "body"
        name: "reset"
        description: ""
        required: true
        schema:
          properties:
            email:
              type: string
              example: sanchez@mail.co
      responses:
        200:
          description: Reseting E-mail sent
          schema:
            properties:
              statusCode:
                type: integer
                example: 2000010
              statusText:
                type: string
                example: E-mail sent!
  
  /auth/logout:
    post:
      tags:
      - Auth
      summary: Logout
      description: ""
      operationId: logout
      responses:
        200:
          description: Deleted
          schema:
            properties:
              statuscode:
                type: integer
                example: "2000022"
              statustext:
                type: string
                example: "Deleted"      

#Profile -----------------------------------------------------------------------

  /profile/changpass:
    put:
      tags:
      - Profile
      summary: Change Password
      description: ""
      operationId: changePass
      parameters:
        - in: "body"
          name: "body"
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/change"
      responses:
        200:
          description: Changed
          schema:
            properties:
              statusCode:
                type: integer
                example: 2000011
              statusText:
                type: string
                example: OK

  /profile/company: #company [employer]
    get:
      tags:
      - Profile
      summary: "Employer Information"
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/profile_employer'
        408:
            description: Request Timeout 
            schema:
                type: object
                properties:
                  statusCode:
                    type: string
                    example: "40800009"
                  statusText:
                    type: string
                    example: Request Timeout
    put:
      tags:
      - Profile
      summary: "For employer to edit their profile"
      description: ""
      parameters:
      - in: "body"
        name: "employer profile edit"
        required: true
        schema:
          $ref: '#/definitions/profile_employer'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/profile_employer'
        400:
          description: Login is unsuccessful
          schema:
                type: object
                properties:
                  statuscode:
                    type: string
                    example: "4000003"
                  statustext:
                    type: string
                    example: "Create is unsuccessful"
                  companyname:
                    type: string
                    example: "Plase Enter Company Name"
                  phonenumber:
                    type: string
                    example: "Plase Enter Phone Number"
                  email:
                    type: string
                    example: "Plase Enter Email"
                  website:
                    type: string
                    example: "Plase Enter Website"
                  address:
                    type: string
                    example: "Plase Enter Address"

  /profile/employees: #profile [employee]
    get:
      tags:
      - Profile
      summary: Show employee profile
      description: ""
      responses:
          200:
            description: OK
            schema:
              $ref: '#/definitions/profile_employee'
          400:
            description: This id does not exist
    put:
      tags:
      - Profile
      summary: "For employee to edit their profile"
      description: ""
      operationId: editProfile
      parameters:
        - in: "body"
          name: "body"
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/profile_employee"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/profile_employee' 

#Post --------------------------------------------------------------------------

  /post/{postID}: #[employer]
    get: #Show infomation post's employer
      tags: 
      - Post
      summary: Show infomation post's employer
      description: ""
      parameters:
        - in: "path"
          name: "postID"
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Successful
          schema:
            type: object
            properties:
              statuscode:
                type: string
                example: "2000005"
              statustext:
                type: string
                example: "Successful"
              show:
                $ref: '#/definitions/post'
    post: #Employer can create  new post in this path.
      tags: 
      - Post
      summary: Employer can create  new post in this path.
      description: ""
      parameters: 
        - in: "body"
          name: "category edit"
          description: ""
          required: true
          schema:
            $ref: '#/definitions/post'
        - in: "path"
          name: "postID"
          required: true
          type: integer
          format: int32
      responses:
        201:
          description: Created!
          schema:
                type: object
                properties:
                  statuscode:
                    type: string
                    example: "2010002"
                  statustext:
                    type: string
                    example: "Create is successful"
                  created:
                    $ref: '#/definitions/post'
    put: #Employer can edit or update infomation in this path.
      tags: 
      - Post
      summary: Employer can edit or update infomation in this path.
      description: ""
      operationId: ""
      parameters: 
        - in: "path"
          name: "postID"
          required: true
          type: integer
          format: int32
        - in: "body"
          name: "category edit"
          description: ""
          required: true
          schema:
            $ref: '#/definitions/post'
      responses:
        202:
          description: Accepted!
          schema:
            properties:
              statuscode:
                type: string
                example: "2020001"
              statustext:
                type: string
                example: "Update is successful"
              Edited:
                $ref: '#/definitions/post'
        400:
          description: Delete is unsuccessful
          schema:
                type: object
                properties:
                  statuscode:
                    type: string
                    example: "4000005"
                  statustext:
                    type: string
                    example: "Update is unsuccessful"           
    delete: #Employer can delete infomation in this path.
      tags: 
      - Post
      summary: Employer can delete infomation in this path.
      description: ""
      parameters:
        - in: "path"
          name: "postID"
          required: true
          type: integer
          format: int32
      responses:
        202:
          description: Accepted!
          schema:
            properties:
              statuscode:
                type: string
                example: "2020001"
              statustext:
                type: string
                example: "Delete is successful"
              delete:
                $ref: '#/definitions/post'
        400:
          description: Delete is unsuccessful
          schema:
                type: object
                properties:
                  statuscode:
                    type: string
                    example: "4000005"
                  statustext:
                    type: string
                    example: "Delete is unsuccessful"           

#Employer ----------------------------------------------------------------------

  /employer/filter: #Employer Filter
    get:
      tags:
      - Employer
      summary: Employer Filter
      description: ""
      operationId: ""
      parameters:
        - in: "body"
          name: "filter"
          required: true
          schema:
            $ref: '#/definitions/filter_employer'
      responses:
        200:
          description: Successful
          schema:
            properties:
                statuscode:
                  type: string
                  example: "2000015"
                statustext:
                  type: string
                  example: "Successful"
                get:
                  $ref: '#/definitions/filter_employer'

  /employer/interests: #This page show interests employee list
    get:
      tags: 
      - Employer
      summary: "This page show interests employee list"
      description: ""
      responses:
        200:
          description: Successful
          schema:
            properties:
                statuscode:
                  type: string
                  example: "2000017"
                statustext:
                  type: string
                  example: "Successful"
                interests:
                  type: array
                  items:
                    $ref: '#/definitions/profile_employee'

  /employer/chat: #This page show chats list
    get:
      tags: 
      - Employer
      summary: "This page show chat list"
      description: ""
      responses:
        200:
          description: OK
          schema:
            properties:
                statuscode:
                  type: string
                  example: "2000016"
                statustext:
                  type: string
                  example: "Successful"
                chats:
                  type: array
                  items:
                    $ref: '#/definitions/profile_employee'

  /employer/nearby: #This page show employees list
    get:
      tags: 
      - Employer
      summary: "This page show employee list"
      description: ""
      responses:
        200:
          description: OK
          schema:
            properties:
                statuscode:
                  type: string
                  example: "2000016"
                statustext:
                  type: string
                  example: "Successful"
                chats:
                  type: array
                  items:
                    $ref: '#/definitions/profile_employee'

  /employer/package/{levelID}: #Show information's package 
    get:
      tags: 
      - Employer
      summary: "Show package list"
      description: ""
      parameters: 
      - in: "path"
        name: "levelID"
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            properties:
              statuscode:
                type: string
                example: "2000021"
              statustext:
                type: string
                example: "Successful"
              package:
                $ref: '#/definitions/package'

  /employer/post: #This page show post list
    get:
      tags: 
      - Employer
      summary: "This page show post list"
      description: ""
      parameters:
        - in: path
          name: query
          type: string
          required: true
          description: Search data.
      responses:
        200:
          description: Successful
          schema:
            properties:
              statusCode:
                type: string
                example: "20000009"
              statusText:
                type: string
                example: Show post successful
              posts:
                type: array
                items:
                  $ref: '#/definitions/post'
              search:
                type: object
                properties:
                  key:
                    type: string
                    example: name
                  query:
                    type: string
                    example: U-coffee

#Employee ----------------------------------------------------------------------

  /employee/filter:
    get:
      tags:
      - Employee
      summary: Shop filter
      description: ""
      operationId: ""
      parameters:
        - in: "body"
          name: "filter"
          required: true
          schema:
            $ref: '#/definitions/filter_employee'
      responses:
        200:
          description: OK
          schema:
            properties:
              shop1:
                type: string
                example: starbuck
              shop2:
                type: string
                example: amazon
                
  /employee/chat: #This page show chats list
    get:
      tags: 
      - Employee
      summary: "This page show chat list"
      description: ""
      responses:
        200:
          description: OK
          schema:
            properties:
                statuscode:
                  type: string
                  example: "2000016"
                statustext:
                  type: string
                  example: "Successful"
                chats:
                  type: array
                  items:
                    $ref: '#/definitions/post'

  /employee/interest:
    post:
      tags:
      - Employee
      summary: Interest selection
      description: ""
      parameters:
      - in: "body"
        name: "interest data"
        description: ""
        required: true
        schema:
          $ref: '#/definitions/post'
      responses:
        200:
          description: Interest selected
          schema:
            $ref: '#/definitions/post'
        400:
          description: Field not complete
          schema:
                type: object
                properties:
                  statusCode:
                    type: string
                    example: "40000003"
                  statusText:
                    type: string
                    example: Field not complete
                  interest:
                    type: string
                    example: "Please select your interest"

  #/employee/map

#EmployerR ---------------------------------------------------------------------
 
  /employer/{shopId}:
    get:
      tags:
      - EmployerR
      summary: show shop information
      description: ""
      operationId: getInformation
      parameters:
        - in: "path"
          name: "shopId"
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            properties:
              statusCode:
                type: integer
                example: 20000014
              statusText:
                type: string
                example: OK
              shopInformation:
                $ref: '#/definitions/post'

  /location/post:
    get:
      tags: 
      - EmployerR
      summary: "This page show post list"
      description: ""
      parameters:
        - in: path
          name: query
          type: string
          required: true
          description: Search data.
      responses:
        200:
          description: Successful
          schema:
            properties:
              statusCode:
                type: string
                example: "20000009"
              statusText:
                type: string
                example: Show post successful
              posts:
                type: array
                items:
                  $ref: '#/definitions/post'
              search:
                type: object
                properties:
                  key:
                    type: string
                    example: name
                  query:
                    type: string
                    example: U-coffee

  /interest/employee/{userID}:
    get:
      tags:
      - EmployerR
      summary: "Employee Information"
      description: ""
      parameters:
      - in: "path"
        name: "userID"
        required: true
        type: integer
        format: int32
      responses:
        200:
          description: OK
          schema:
            properties:
                statuscode:
                  type: string
                  example: "2000018"
                statustext:
                  type: string
                  example: "Successful"
                profile:
                  $ref: '#/definitions/profile_employee'

  /employer/profile:
    get:
      tags:
      - EmployerR
      summary: "Employer Information"
      description: ""
      responses:
        200:
          description: OK
          schema:
            properties:
              statuscode:
                  type: string
                  example: "2000019"
              statustext:
                type: string
                example: "Successful"
              profile:
                $ref: '#/definitions/profile_employer'

  /employer/profile/edit:
    put:
      tags:
      - EmployerR
      summary: "For employer to edit their profile"
      description: ""
      parameters:
      - in: "body"
        name: "employer profile edit"
        required: true
        schema:
          $ref: '#/definitions/profile_employer'
      responses:
        200:
          description: OK
          schema:
            properties:
              statuscode:
                type: string
                example: "2000020"
              statustext:
                type: string
                example: "Successful"
              edited:
                $ref: '#/definitions/profile_employer'
        400:
          description: Login is unsuccessful
          schema:
                type: object
                properties:
                  statuscode:
                    type: string
                    example: "4000007"
                  statustext:
                    type: string
                    example: "Create is unsuccessful"
                  edit:
                    type: object
                    properties:
                      companyname:
                        type: string
                        example: "Plase Enter Company Name"
                      phonenumber:
                        type: string
                        example: "Plase Enter Phone Number"
                      email:
                        type: string
                        example: "Plase Enter Email"
                      website:
                        type: string
                        example: "Plase Enter Website"
                      address:
                        type: string
                        example: "Plase Enter Address"

  /profile/employee: 
    get:
      tags:
      - othder
      summary: Show employee profile
      description: ""
      parameters:
        - in: "body"
          name: "token"
          required: true
          schema:
            properties:
              token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.
      responses:
          200:
            description: OK
            schema:
              type: object
              properties:
                statusCode:
                  type: integer
                  example: 2000003
                statusText:
                  type: string
                  example: OK
                profile:
                  type: object
                  properties:
                    email:
                      type: string
                      example: tae_chanhom@hotmail.com
                    passworld:
                      type: string
                      example: 029959866Tae
                    gender:
                      type: string
                      example: male
                    brithday:
                      type: string
                      example: 14/12/42
                    firstname:
                      type: string
                      example: John
                    lastname:
                      type: string
                      example: Smith
                    interest:
                      type: string
                      example: Coffee Shop
                    age:
                      type: integer
                      example: 20
                    language:
                      type: string
                      example: Thai
                    experience:
                      type: string
                      example: none
          400:
            description: This id does not exist
            schema:
              properties:
                statusCode:
                  type: integer
                  example: 4000004
                statusText:
                  type: string
                  example: Bad request
    put:
      tags:
      - othder
      summary: "For employee to edit their profile"
      description: ""
      parameters:
        - in: "body"
          name: "body"
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/profile_employee"
      responses:
        200:
          description: OK
          schema:
            properties:
              statusCode:
                type: integer
                example: 2000004
              statusText:
                type: string
                example: OK
              editedProfile:
                $ref: '#/definitions/profile_employee' 
    delete:
      tags:
      - othder
      summary: Delete Accout
      description: ""
      operationId: Delete
      parameters:
        - in: "body"
          name: "Delete"
          required: true
          schema:
            properties:
              userId:
                type: integer
                example: 512
              token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.
      responses:
        200:
          description: Deleted
          schema:
            properties:
              statusCode:
                type: integer
                example: 2000012
              statusText:
                type: string
                example: Deleted
        400:
          description: User not found
          schema:
            properties:
              statusCode:
                type: integer
                example: 4000006
              statusText:
                type: string
                example: Bad request           

definitions: #------------------------------------------------------------------

  filter_employee:
    type: object
    required:
    - dist
    - province
    - category
    properties:
      dist:
        type: integer
        example: 50
      province:
        type: string
        example: bangkok
      category:
        type: string
        example: Bar 

  filter_employer:
    type: object
    required:
    - category
    - province
    properties:
      category:
        type: string
        example: CEO
      province:
        type: string
        example: bangkok

  change:
    type: object
    required:
    - oldpass
    - newpass
    - confirm
    - token
    properties:
      oldpass:
        type: string
        example: swaggerisveryeasy
      newpass:
        type: string
        example: ricksanchez12345
      confirm:
        type: string
        example: ricksanchez12345
      token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.

  user: 
    type: object
    required:
    - email
    - passworld
    - gender
    - birthday
    - firstname
    - lastname
    - id
    properties:
      email:
        type: string
        example: tae_chanhom@hotmail.com
      passworld:
        type: string
        example: 029959866Tae
      gender:
        type: string
        example: male
      brithday:
        type: string
        example: 14/12/42
      firstname:
        type: string
        example: John
      lastname:
        type: string
        example: Smith
      id:
        type: string
        example: 152

  post:
    type: object
    required: 
    - postID
    - category
    - shopname
    - description
    - wage
    - min
    - max
    - location
    - province
    properties:
      postID:
        type: integer
        example: 1
      category:
        type: string
        example: Coffee shop
      shopname:
        type: string
        example: U-coffee
      description:
        type: string
        example: information about you shop
      wage:
        type: string
        example: Week
      min:
        type: integer
        example: 1000
      max:
        type: integer
        example: 8000
      location:
        type: string
        example: lamlugar 12130
      province:
        type: string
        example: bangkok

  interest:
    type: object
    required:
    - interest
    properties:
      interest:
        type: string
        example: Coffee shop

  employee_list:
    type: object
    required: 
    - id
    - name
    - occupation
    - age
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: tae
      occupation:
        type: string
        example: Selesperson
      age:
        type: integer
        example: 24

  post_list:
    type: object
    required: 
    - postID
    - shopname
    - category
    - province
    properties:
      postID:
        type: integer
        example: 1
      shopname:
        type: string
        example: U-Coffee
      category:
        type: string
        example: Coffee Shop
      province:
        type: string
        example: Bangkok

  profile_employee:
    type: object
    required:
    - firstname
    - lastname
    - birthday
    - age
    - email
    - number
    - interest
    - language
    - experience
    - token
    properties:
      firstname:
        type: string
        example: Rick
      lastname:
        type: string
        example: Sanchez
      birthday:
        type: string
        example: 29/2/1999
      age:
        type: integer
        example: 19
      email:
        type: string
        example: rick@gmail.com
      number:
        type: string
        example: 089-999
      interest:
        type: string
        example: spaceship crew
      language:
        type: string
        example: English
      experience:
        type: string
        example: none
      token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.

  profile_employer:
    type: object
    required:
    - companyname
    - phonenumber
    - email
    - website
    - address
    properties:
      companyname:
        type: string
        example: UTNai Company
      phonenumber:
        type: string
        example: 032-051-4216
      email:
        type: string
        example: UTNai@gmail.com
      website:
        type: integer
        example: UTNai.com
      address:
        type: string
        example: 11600  New Petchaburi Rd.
                Makkasan Sub-area   Ratchathewi Area
                Krung Thep Maha Nakhon   10400
                Thailand.

  package:
    type: object
    required:
    - levelID
    - level
    - price
    - timerange
    - postrange
    - positions
    properties:
      levelID:
        type: integer
        format: int64
        example: 1
      level:
        type: integer
        example: 1
      price:
        type: integer
        example: 500
      timerange:
        type: integer
        example: 1
      postrange:
        type: string
        example: Unlimited
      positions:
        type: integer
        example: 1

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /61070078/test/1.0.0
schemes:
 - https
# Added by API Auto Mocking Plugin
# basePath: /61070078/UTnai_v01/1.0.0
# Added by API Auto Mocking Plugin
# basePath: /61070078/UTNai_V01_API/1.0.0
# Added by API Auto Mocking Plugin
# basePath: /61070089/UTNai_API/1.0.0
# Added by API Auto Mocking Plugin
# basePath: /61070078/UTNai_V01_API/1.0.0
# Added by API Auto Mocking Plugin
# basePath: /61070089/UTNai_API/1.0.0
# Added by API Auto Mocking Plugin
basePath: /61070078/UTNai_V01_API/1.0.0